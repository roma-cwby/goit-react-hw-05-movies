{"version":3,"file":"static/js/864.42d5ec87.chunk.js","mappings":"kRAEaA,E,OAAeC,GAAAA,IAAH,qT,SC+DzB,EAzDe,WACb,OAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,EAAcP,EAAYQ,IAAI,KAE9BC,GAAWC,EAAAA,EAAAA,MAwBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACOJ,EADP,2EAIuBK,EAAAA,EAAAA,IAAeL,GAJtC,UAIUM,EAJV,OAKIT,EAAcS,GALlB,OAMSA,QANT,IAMSA,GAAAA,EAAMC,OANf,sBAM6B,IAAIC,MANjC,yDAQIC,MAAM,SARV,2DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACV,KAGF,UAACV,EAAD,YACE,kBAAMqB,SAxBa,SAAAC,GACrBA,EAAEC,iBAEFnB,EAAgB,CAAEoB,EAAGhB,GACtB,EAoBG,WACE,kBACEiB,KAAK,OACLC,MAAOlB,EACPmB,SAAU,SAAAL,GAAC,OAAIb,EAASa,EAAEM,OAAOF,MAAtB,KAEb,mBAAQD,KAAK,SAAb,uBAGDnB,EAAWW,OAAS,IACnB,SAAC,IAAD,UACGX,EAAWuB,KAAI,SAAAC,GAAK,OACnB,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAhD,WACE,gBAAKuB,IAhDA,mCAgDoBL,EAAMM,YAAaC,IAAKP,EAAMQ,SACvD,wBAAKR,EAAMQ,YAHNR,EAAME,GADI,QAY9B,C","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesSearch = styled.div`\n  padding: 0 20px;\n\n    form {\n        margin-bottom: 20px;\n\n      input {\n        height: 30px;\n        border-radius: 5px;\n      }\n\n      button {\n        border-radius: 5px;\n        height: 30px;\n        padding: 0 10px;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { getFilmsByName } from 'api';\nimport { HomeList } from 'components/Home/Home.Styled';\nimport { MoviesSearch } from './Movies.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst Movies = () => {\n  const [seachParams, setSearchParams] = useSearchParams();\n  const [searchList, setSearchList] = useState([]);\n  const [query, setQuery] = useState('');\n  const searchQuery = seachParams.get('q');\n\n  const location = useLocation();\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ q: query });\n  };\n\n  useEffect(() => {\n    async function getData() {\n      if (!searchQuery) return;\n\n      try {\n        const data = await getFilmsByName(searchQuery);\n        setSearchList(data);\n        if (!data?.length) throw new Error();\n      } catch (e) {\n        alert(`Error`);\n      }\n    }\n\n    getData();\n  }, [searchQuery]);\n\n  return (\n    <MoviesSearch>\n      <form onSubmit={onHandleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {searchList.length > 0 && (\n        <HomeList>\n          {searchList.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img src={BASE_IMG_URL + movie.poster_path} alt={movie.title} />\n                <h2>{movie.title}</h2>\n              </Link>\n            </li>\n          ))}\n        </HomeList>\n      )}\n    </MoviesSearch>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesSearch","styled","useSearchParams","seachParams","setSearchParams","useState","searchList","setSearchList","query","setQuery","searchQuery","get","location","useLocation","useEffect","getFilmsByName","data","length","Error","alert","getData","onSubmit","e","preventDefault","q","type","value","onChange","target","map","movie","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}